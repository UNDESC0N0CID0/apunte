<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Paradigmas Fundamentales on</title><link>/docs/paradigmas/</link><description>Recent content in Paradigmas Fundamentales on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="/docs/paradigmas/index.xml" rel="self" type="application/rss+xml"/><item><title>Búsqueda Binaria</title><link>/docs/paradigmas/busqueda-binaria/</link><pubDate>Sat, 24 Jul 2021 17:00:45 +0000</pubDate><guid>/docs/paradigmas/busqueda-binaria/</guid><description>Introducción y búsqueda lineal A veces necesitamos buscar algún elemento en algún espacio. Un ejemplo típico es buscar un número en un arreglo o vector, lo cual se puede hacer con una búsqueda lineal:
bool en_arreglo(vector &amp;lt;int&amp;gt; &amp;amp;vec, int x){ for(int y : vec) if(y == x) return true; return false; } Si nuestros datos no tienen ninguna propiedad que podamos aprovechar (por ejemplo son aleatorios), probablemente esta sea la mejor forma, a menos que insertemos nuestros elementos en una estructura diferente.</description></item><item><title>Programación Dinámica</title><link>/docs/paradigmas/programacion-dinamica/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/paradigmas/programacion-dinamica/</guid><description>La programación dinámica es quizás el tema más importante a aprender para programación competitiva. En general, toda competencia tiene al menos 1 problema que se puede resolver utilizando programación dinámica además de otros problemas donde la programación dinámica es útil para resolver algo pequeño que puede ayudar para la solución. Debido a esto creemos que la gente nueva debería entrenar en específico la programación dinámica, además de los otros temas en general.</description></item></channel></rss>