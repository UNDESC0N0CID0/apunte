<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Intro a la Programación on</title><link>/docs/intro/</link><description>Recent content in Intro a la Programación on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 15 May 2021 13:48:45 +0000</lastBuildDate><atom:link href="/docs/intro/index.xml" rel="self" type="application/rss+xml"/><item><title>Compilación y Editores de Texto</title><link>/docs/intro/compilacion-editores/</link><pubDate>Sat, 15 May 2021 14:00:45 +0000</pubDate><guid>/docs/intro/compilacion-editores/</guid><description>Prerequisitos Para este artículo, asumimos que posees conocimiento básico de uso de terminales. No podemos cubrir eso acá, pues puede variar mucho dependiendo de tu sistema. Si no sabes usar un terminal, ¡no te preocupes! Es más sencillo de lo que puede parecer al inicio. Cualquier tutorial básico de internet te servirá para lo que usaremos.
Compilación Como C++ es un lenguaje compilado (al contrario que, por ejemplo, Python, que es interpretado), necesitamos descargar un compilador para poder crear un archivo ejecutable a partir de nuestro código fuente.</description></item><item><title>Sintaxis, Variables, Tipos y Ciclos</title><link>/docs/intro/sintaxis/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/intro/sintaxis/</guid><description>Ahora que tienes las herramientas para programar, podemos empezar a entender las partes de un programa en C++. En esta sección se explican todos los conceptos previos necesarios para empezar a resolver problemas de programación, sientete libre de omitir esta parte si sabes como funciona la programación o has tenido experiencia programando antes.
Sintaxis Tal como en otros lenguajes de programación (como c, kotlin o python) vamos a identificar las instrucciones de nuestro código a partir de la manera en que están agrupadas las líneas de código.</description></item><item><title>Funciones en C++</title><link>/docs/intro/funciones/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/intro/funciones/</guid><description>Las funciones permiten organizar de mejor manera el código, haciendolo más legible y limpio, lo que facilita el debugging, además algunos algoritmos son más fáciles al pensarlos en funciones como el backtracking.
Creando funciones Para crear una función se escribe su nombre seguido por párentesis, después se abren llaves {} donde se define el cuerpo de la función:
void unaFuncion() { // Cuerpo de la función cout &amp;lt;&amp;lt; &amp;#34;Se llamó esta función!</description></item><item><title>Operadores Bitwise</title><link>/docs/intro/bits/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/intro/bits/</guid><description>Números binarios Probablemente te sea familiar el concepto de los números binarios, son números que están compuestos solamente por unos y ceros, cada dígito es llamado un bit, y dependiendo de la posición de este dígito es una distinta potencia de 2:
Hay bastantes problemas que requieren que revises los bits de un número y trabajes sobre ellos y esto es bastante fácil si sabes como hacerlo:
int number; cin&amp;gt;&amp;gt;number; vector&amp;lt;int&amp;gt; bits; while (number !</description></item></channel></rss>